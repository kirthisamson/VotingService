plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.kirthisamson'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.xerial:sqlite-jdbc'
	compile 'com.zsoltfabok:sqlite-dialect:1.0'
	compileOnly 'org.projectlombok:lombok'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '3.2.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompile 'junit:junit:4.11'
}

test {
	useJUnitPlatform()
}

//if (JavaVersion.current().isJava8Compatible()) {
//	allprojects {
//		tasks.withType(Javadoc) {
//			options.addStringOption('Xdoclint:none', '-quiet')
//		}
//	}
//}


task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

